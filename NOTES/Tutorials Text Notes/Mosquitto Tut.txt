Firstly ruun broker.conf  : 
	mosquitto -v -c broker.conf
Edit broker.conf add : 
	listener 1883
	
	
To run subscriber : 
	mosquitto_sub -t mytopic
To run publisher :
	mosquitto_pub -t mytopic -m "Hello ROhit!"
	
--------------- MqttSubscriber ---------------
import org.eclipse.paho.client.mqttv3.*;
import org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;

public class MqttSubscriber {

    public static void main(String[] args) {
        String brokerUrl = "tcp://mqtt.flespi.io:1883";
        String clientId = "JavaMqttSubscriber";
        String topic = "flespi/message/gw/channels/1157819/+";

        MqttClient mqttClient;
        try {
            mqttClient = new MqttClient(brokerUrl, clientId, new MemoryPersistence());
            MqttConnectOptions connOpts = new MqttConnectOptions();
            connOpts.setCleanSession(true);

            mqttClient.connect(connOpts);
            mqttClient.subscribe(topic);
            mqttClient.setCallback(new MqttCallback() {
                @Override
                public void connectionLost(Throwable cause) {
                    System.out.println("Connection lost: " + cause.getMessage());
                }

                @Override
                public void messageArrived(String topic, MqttMessage message) throws Exception {
                    String payload = new String(message.getPayload());
                    System.out.println("Received message on topic '" + topic + "': " + payload);
                    // Call your on_message function or logic here
                }

                @Override
                public void deliveryComplete(IMqttDeliveryToken token) {
                    // Not used for subscriptions
                }
            });

            Thread.sleep(300000); // Sleep for 5 minutes (300,000 milliseconds)
            mqttClient.disconnect();
        } catch (MqttException | InterruptedException e) {
            e.printStackTrace();
        }
    }
}
